<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                    xmlns:controls="clr-namespace:Fiasqo.PeepoRotChatbot.Domain.Controls">
    <Style TargetType="controls:HamburgerMenu">
        <Setter Property="Width" Value="50" />
        <Setter Property="Visibility" Value="Visible" />
        <Setter Property="IsOpen" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="controls:HamburgerMenu">
                    <ControlTemplate.Resources>
                        <ResourceDictionary>
                            <Style x:Key="ButtonFocusVisual">
                                <!-- ReSharper disable Xaml.RedundantPropertyTypeQualifier -->
                                <Setter Property="Control.Template">
                                    <!-- ReSharper restore Xaml.RedundantPropertyTypeQualifier -->
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <Border>
                                                <Rectangle Margin="2"
                                                           StrokeThickness="1"
                                                           Stroke="#60000000"
                                                           StrokeDashArray="1 2" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="ListBox">
                                <Setter Property="Background" Value="Transparent" />
                                <Setter Property="BorderBrush" Value="Transparent" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate>
                                            <ScrollViewer>
                                                <ItemsPresenter Margin="0" />
                                            </ScrollViewer>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="ToggleButton">
                                <Setter Property="SnapsToDevicePixels" Value="true" />
                                <Setter Property="FocusVisualStyle" Value="{StaticResource ButtonFocusVisual}" />
                                <Setter Property="IsChecked" Value="False" />
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="{x:Type ToggleButton}">
                                            <Border x:Name="Border"
                                                    CornerRadius="0"
                                                    BorderThickness="0"
                                                    Background="Transparent"
                                                    BorderBrush="Transparent">
                                                <ContentPresenter Margin="0"
                                                                  HorizontalAlignment="Stretch"
                                                                  VerticalAlignment="Stretch"
                                                                  RecognizesAccessKey="True" />
                                                <VisualStateManager.VisualStateGroups>
                                                    <VisualStateGroup x:Name="CommonStates">
                                                        <VisualState x:Name="Normal" />
                                                        <VisualState x:Name="MouseOver" />
                                                        <VisualState x:Name="Pressed" />
                                                        <VisualState x:Name="Disabled" />
                                                    </VisualStateGroup>
                                                    <VisualStateGroup x:Name="CheckStates">
                                                        <VisualState x:Name="Checked" />
                                                        <VisualState x:Name="Unchecked" />
                                                        <VisualState x:Name="Indeterminate" />
                                                    </VisualStateGroup>
                                                </VisualStateManager.VisualStateGroups>
                                            </Border>
                                            <ControlTemplate.Triggers>
                                                <Trigger Property="IsKeyboardFocused" Value="true">
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                                </Trigger>
                                                <Trigger Property="IsMouseOver" Value="true">
                                                    <Setter TargetName="Border" Property="Background" Value="#59FFFFFF" />
                                                </Trigger>
                                                <Trigger Property="IsPressed" Value="true">
                                                    <Setter TargetName="Border" Property="Background" Value="#80FFFFFF" />
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                                </Trigger>
                                                <Trigger Property="IsEnabled" Value="false">
                                                    <Setter TargetName="Border" Property="Background" Value="Transparent" />
                                                    <Setter TargetName="Border" Property="BorderBrush" Value="Transparent" />
                                                    <Setter Property="Foreground" Value="Transparent" />
                                                </Trigger>
                                            </ControlTemplate.Triggers>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                            <Style TargetType="controls:HamburgerMenuItem">
                                <Setter Property="Foreground"
                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=MenuItemForeground}" />
                                <Setter Property="SelectionIndicatorColor"
                                        Value="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}}, Path=SelectionIndicatorColor}" />
                            </Style>
                        </ResourceDictionary>
                    </ControlTemplate.Resources>
                    <Grid x:Name="mainGrid"
                          Background="{TemplateBinding Background}">
                        <ToggleButton x:Name="menuIcon"
                                      Width="50"
                                      Height="40"
                                      HorizontalAlignment="Left"
                                      VerticalAlignment="Top"
                                      IsChecked="{Binding RelativeSource={RelativeSource AncestorType={x:Type controls:HamburgerMenu}},
                                                          Path=IsOpen}">
                            <materialDesign:PackIcon Width="28"
                                                     Height="28"
                                                     HorizontalAlignment="Center"
                                                     VerticalAlignment="Center"
                                                     RenderOptions.BitmapScalingMode="HighQuality"
                                                     SnapsToDevicePixels="True"
                                                     FontWeight="Thin"
                                                     Foreground="{TemplateBinding MenuIconColor}"
                                                     Kind="Menu" />
                        </ToggleButton>
                        <ListBox Margin="0,50,0,0"
                                 HorizontalAlignment="Left"
                                 VerticalAlignment="Top"
                                 ItemsSource="{TemplateBinding Content}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 SelectedIndex="{TemplateBinding SelectedIndex}" />
                    </Grid>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsOpen" Value="True">
                <Trigger.EnterActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"
                                             To="150"
                                             Duration="0:0:0.185">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                    <BeginStoryboard>
                        <Storyboard>
                            <DoubleAnimation Storyboard.TargetProperty="Width"
                                             To="50"
                                             Duration="0:0:0.135">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseInOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </Trigger.ExitActions>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>